#include <RichForm.hpp>
#include <SysUtils.hpp>
#include <RichApplication.hpp>

namespace ArsLexis {

    bool RichForm::handleEvent(EventType& event)
    {
        bool handled=false;
        switch (event.eType)
        {
            case winDisplayChangedEvent:
                // workaround for PalmOS bug - when winDisplayChangedEvent is generated by PalmOS<5.4 it contains only rubbish.
                ArsLexis::getScreenBounds(event.data.winDisplayChanged.newBounds); 
                resize(event.data.winDisplayChanged.newBounds);
                break;
        
            default:
                handled=Form::handleEvent(event);
        }
        return handled;
    }

    Err RichForm::initialize()
    {
        RichApplication& app=static_cast<RichApplication&>(application());
        Err error=Form::initialize();
        if (errNone==error && app.diaSupport())
            app.diaSupport().configureForm(*this, 160, pinMaxConstraintSize, pinMaxConstraintSize, 160, pinMaxConstraintSize, pinMaxConstraintSize);
        return error;
    }

    RichForm::RichForm(RichApplication& app, uint_t formId):
        Form(app, formId)
    {}
    
    RichForm::~RichForm()
    {}

    void RichForm::resize(const ArsLexis::Rectangle&)
    {}
    
    WindowFormatType RichForm::windowFormat() const
    {return static_cast<const RichApplication&>(application()).hasHighDensityFeatures()?nativeFormat:screenFormat;}
    
}